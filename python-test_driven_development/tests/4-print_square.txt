>>> print_square = __import__('4-print_square').print_square

Test1 with square number 0:
    >>> print_square(0)

Test2 with square number 1:
    >>> print_square(1)
    #

Test3 with square number 2:
    >>> print_square(2)
    ##
    ##

Test4 with square number 3:
    >>> print_square(3)
    ###
    ###
    ###

Test5 with square number 10:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test6 with negative:
    >>> print_square(-10)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test7 with float:
    >>> print_square(10.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test8 with str:
    >>> print_square("foo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test9 with none:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test10 with inf:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test11 with nan:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Missing one argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
